# For model1:
Coefficients:
            Estimate   Std.Error t value   Pr(>|t|)    
(Intercept) 18.59873   6.74790   2.756    0.006856
Solar.R      0.12717   0.03278   3.880    0.000179

Residual standard error: 31.33 on 109 degrees of freedom
  (42 observations deleted due to missingness)
Multiple R-squared:  0.1213,	Adjusted R-squared:  0.1133 
F-statistic: 15.05 on 1 and 109 DF,  p-value: 0.0001793

Adjusted R-squared:  0.1133 ~= 11.33% 

# For model2:
wind and Temp coefficients added in calculation to get more predicated value of Residual standard error.

Coefficients:
             Estimate    Std. Error  t value  Pr(>|t|)    
(Intercept) -64.34208    23.05472    -2.791   0.00623 
Solar.R       0.05982    0.02319     2.580    0.01124   
Wind         -3.33359    0.65441     -5.094   1.52e-06 
Temp          1.65209    0.25353     6.516    2.42e-09 

Residual standard error: 21.18 on 107 degrees of freedom
  (42 observations deleted due to missingness)
Multiple R-squared:  0.6059,	Adjusted R-squared:  0.5948 
F-statistic: 54.83 on 3 and 107 DF,  p-value: < 2.2e-16

Adjusted R-squared:  0.5948 ~= 59.48%

model2 is best fit to calculate ozone in environment then model1
because model2 R-Squared value greater than model1 R-Squared value.

conclusion: The adjusted R-squared increases only if the new term improves the model more than would be expected by chance. 
It decreases when a predictor improves the model by less than expected by chance. 

##  Assumptions of linear regression

data(airquality)
names(airquality)
model2 = lm(Ozone~Solar.R+Wind+Temp,data=airquality)
model2

# 1. The regression model is linear in parameters

# i.e ozone = -64.34+0.059(Solar.R)-3.33(Wind)+1.65(Temp)

# So Assumption Assumptions acceptable

# 2. The mean of residuals is zero

mean(model2$residuals)

#output : 7.417701e-17 it is almost zero Assemption is acceptable.

#3. Homoscedasticity of residuals or equal variance

par(mfrow=c(2,2))  # set 2 rows and 2 column plot layout
plot(model2)

#In this case, there is a definite pattern noticed.
#So, there is heteroscedasticity. Lets check this on a different model.

mod <- lm(Ozone~Solar.R+Wind+Temp,data=airquality[1:20, ])  #  linear model
plot(mod)


# Assumption 4: The X variables and residuals are uncorrelated

##Do a correlation test on the X variable and the residuals.

cor.test(subset(airquality, select = c(-Month,-Day,-Ozone)), model2$residuals)  # do correlation test 

cor.test((airquality[2:4]),model2$residuals)

#Error in cor.test.default((airquality[2:4]), model2$residuals) : 'x' and 'y' must have the same length


# Assumption 5: The number of observations must be greater than number of Xs

##This can be directly observed by looking at the data.


# Assumption 6: The variability in X values is positive

var(airquality$Solar.R+airquality$Wind+airquality$Temp,na.rm=T)  

# The variance in the X variable above is much larger than 0. So, this assumption is satisfied.



# Assumption 7: The regression model is correctly specified

# This means that if the Y and X variable has an inverse relationship,S
# the model equation should be specified appropriately: Y=ß1+ß2*(1/X)


#Assumption 8: No perfect multicollinearity

# Using Variance Inflation factor (VIF).
# VIF=1/(1-Rsq)
#install.packages('car')
library(car)
car::vif(model2)

# Output :  Solar.R     Wind     Temp 
#           1.095253 1.329070 1.431367 

#The convention is, the VIF should not go more than 4 for any of the X variables. That means we are not letting the RSq of any of the Xs (the model that was built with that X as a response variable and the remaining Xs are predictors) to go more than 75%. => 1/(1-0.75) => 1/0.25 => 4.

# to check all Assumption
#install.packages('gvlma')
library(gvlma)
par(mfrow=c(2,2))  # draw 4 plots in same window
model2=lm(Ozone~Solar.R+Wind+Temp,data=airquality)
gvlma::gvlma(model2)

## Making the modifications
mod <- lm(Ozone~Solar.R+Wind+Temp,data=airquality[-c(30, 62, 117), ])
gvlma::gvlma(mod)
